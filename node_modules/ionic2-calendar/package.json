{
  "_args": [
    [
      {
        "raw": "ionic2-calendar",
        "scope": null,
        "escapedName": "ionic2-calendar",
        "name": "ionic2-calendar",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\esayli\\desktop\\ionicApp\\AdvanceDiary"
    ]
  ],
  "_from": "ionic2-calendar@latest",
  "_id": "ionic2-calendar@0.2.5",
  "_inCache": true,
  "_location": "/ionic2-calendar",
  "_nodeVersion": "4.4.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/ionic2-calendar-0.2.5.tgz_1492734094305_0.8204004594590515"
  },
  "_npmUser": {
    "name": "twinssbc",
    "email": "bocong@hotmail.com"
  },
  "_npmVersion": "2.15.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ionic2-calendar",
    "scope": null,
    "escapedName": "ionic2-calendar",
    "name": "ionic2-calendar",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ionic2-calendar/-/ionic2-calendar-0.2.5.tgz",
  "_shasum": "e552971655e46419d630a0732b769af331c8919b",
  "_shrinkwrap": null,
  "_spec": "ionic2-calendar",
  "_where": "C:\\Users\\esayli\\desktop\\ionicApp\\AdvanceDiary",
  "author": {
    "name": "twinsbc"
  },
  "bugs": {
    "url": "https://github.com/twinssbc/Ionic2-Calendar/issues"
  },
  "dependencies": {},
  "description": "Ionic2 calendar component",
  "devDependencies": {
    "@angular/common": "2.2.1",
    "@angular/compiler": "2.2.1",
    "@angular/compiler-cli": "2.2.1",
    "@angular/core": "2.2.1",
    "@angular/forms": "2.2.1",
    "@angular/http": "2.2.1",
    "@angular/platform-browser": "2.2.1",
    "@angular/platform-browser-dynamic": "2.2.1",
    "@angular/platform-server": "2.2.1",
    "intl": "^1.2.5",
    "ionic-angular": "2.1.0",
    "rxjs": "5.0.0-beta.12",
    "tslint-ionic-rules": "0.0.5",
    "typescript": "2.0.3",
    "typings": "1.3.1",
    "zone.js": "0.6.26"
  },
  "directories": {},
  "dist": {
    "shasum": "e552971655e46419d630a0732b769af331c8919b",
    "tarball": "https://registry.npmjs.org/ionic2-calendar/-/ionic2-calendar-0.2.5.tgz"
  },
  "homepage": "https://github.com/twinssbc/Ionic2-Calendar#readme",
  "keywords": [
    "Ionic2",
    "calendar"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "twinssbc",
      "email": "bocong@hotmail.com"
    }
  ],
  "name": "ionic2-calendar",
  "optionalDependencies": {},
  "readme": "# Ionic2-Calendar directive\n\nIonic2 calendar directive\n\n# Demo\nhttps://twinssbc.github.io/Ionic2-Calendar/demo/\n\n# Dependency\nThe latest version has below dependency:      \nintl 1.2.5, due to issue https://github.com/angular/angular/issues/3333    \n\nversion 0.1.x depends on Ionic 2.0.0-rc.1 ~ Ionic 2.0.0-rc.4    \nversion 0.2.x depends on Ionic 2.0.0-rc.5 (rc.5 has breaking change on the slide API) and  2.0.0 final version onwards.\n\n\n# Usage\n\nInstall: `npm install ionic2-calendar --save`\n\nImport the ionic2-calendar module:\n\n```\nimport { NgModule } from '@angular/core';\nimport { IonicApp, IonicModule } from 'ionic-angular';\nimport { MyApp } from './app/app.component';\nimport { NgCalendarModule  } from 'ionic2-calendar';\n\n\n@NgModule({\n    declarations: [\n        MyApp\n    ],\n    imports: [\n        NgCalendarModule,\n        IonicModule.forRoot(MyApp)\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp\n    ]\n})\nexport class AppModule {}\n```\n\nAdd the directive in the html page\n\n```\n      <calendar [eventSource]=\"eventSource\"\n        [calendarMode]=\"calendar.mode\"\n        [currentDate]=\"calendar.currentDate\"\n        (onCurrentDateChanged)=\"onCurrentDateChanged($event)\"\n        (onRangeChanged)=\"reloadSource(startTime, endTime)\"\n        (onEventSelected)=\"onEventSelected($event)\"\n        (onTitleChanged)=\"onViewTitleChanged($event)\"\n        (onTimeSelected)=\"onTimeSelected($event)\"\n        step=\"30\">\n      </calendar>\n```\n\n# Note for Ionic Build/Run command\nionic serve uses tsc to compile the code, while ionic build/run uses ngc to compile the code.    \nIt requires explicit dependency on the compiled ngfactory files for each component.    \nI couldn’t find a way to configure the build command includes the ngfactory of the child components automatically.    \nSo the workaround is to import them explicitly.    \nAdd below lines in *main.prod.ts*\n\n\n```\nimport { CalendarComponent } from 'ionic2-calendar/calendar';\nimport { MonthViewComponent } from 'ionic2-calendar/monthview';\nimport { WeekViewComponent } from 'ionic2-calendar/weekview';\nimport { DayViewComponent } from 'ionic2-calendar/dayview';\n```\n\n\n# Options\n\n* formatDay    \nThe format of the date displayed in the month view.    \nDefault value: 'dd'\n* formatDayHeader    \nThe format of the header displayed in the month view.    \nDefault value: 'EEE'\n* formatDayTitle    \nThe format of the title displayed in the day view.    \nDefault value: 'MMMM dd, yyyy'\n* formatWeekTitle    \nThe format of the title displayed in the week view.    \nDefault value: 'MMMM yyyy, Week w'\n* formatMonthTitle    \nThe format of the title displayed in the month view.    \nDefault value: 'MMMM yyyy'\n* formatWeekViewDayHeader    \nThe format of the header displayed in the week view.    \nDefault value: 'EEE d'\n* formatHourColumn    \nThe format of the hour column displayed in the week and day view.    \nDefault value: ‘j’\n* calendarMode    \nThe initial mode of the calendar.    \nDefault value: 'month'\n* showEventDetail    \nIf set to true, when selecting the date in the month view, the events happened on that day will be shown below.    \nDefault value: true\n* startingDayMonth    \nControl month view starting from which day.    \nDefault value: 0\n* startingDayWeek    \nControl week view starting from which day.    \nDefault value: 0\n* allDayLabel    \nThe text displayed in the allDay column header.    \nDefault value: ‘all day’\n* noEventsLabel    \nThe text displayed when there’s no event on the selected date in month view.    \nDefault value: ‘No Events’\n* eventSource    \nThe data source of the calendar, when the eventSource is set, the view will be updated accordingly.    \nDefault value: null    \nThe format of the eventSource is described in the EventSource section\n* queryMode    \nIf queryMode is set to 'local', when the range or mode is changed, the calendar will use the already bound eventSource to update the view    \nIf queryMode is set to 'remote', when the range or mode is changed, the calendar will trigger a callback function rangeChanged.    \nUsers will need to implement their custom loading data logic in this function, and fill it into the eventSource. The eventSource is watched, so the view will be updated once the eventSource is changed.    \nDefault value: 'local'\n* step    \nIt can be set to 15 or 30, so that the event can be displayed at more accurate position in weekview or dayview.    \nDefault value: 60\n* autoSelect  \nIf set to true, the current calendar date will be auto selected when calendar is loaded or swiped in the month view.  \nDefault value: true\n* markDisabled    \nThe callback function used to determine if the time should be marked as disabled.    \n\n        <calendar ... [markDisabled]=“markDisabled”></calendar>\n\n        markDisabled = (date: Date) => {\n            var current = new Date();\n            return date < current;\n        };\n\n* onCurrentDateChanged    \nThe callback function triggered when the date that is currently viewed changes.\n\n        <calendar ... (onCurrentDateChanged)=\"onCurrentDateChanged($event)\"></calendar>\n\n        onCurrentChanged = (ev: Date) => {\n            console.log('Currently viewed date: ' + ev);\n        };\n\n* onRangeChanged    \nThe callback function triggered when the range or mode is changed if the queryMode is set to 'remote'    \nThe ev parameter contains two fields, startTime and endTime.\n\n        <calendar ... (onRangeChanged)=\"onRangeChanged($event)\"></calendar>\n\n        onRangeChanged = (ev: { startTime: Date, endTime: Date }) => {\n            Events.query(ev, (events) => {\n                this.eventSource = events;\n            });\n        };\n\n* onEventSelected    \nThe callback function triggered when an event is clicked\n\n        <calendar ... (onEventSelected)=\"onEventSelected($event)\"></calendar>\n\n        onEventSelected = (event) => {\n            console.log(event.title);\n        };\n\n* onTimeSelected    \nThe callback function triggered when a date is selected in the monthview.    \nThe ev parameter contains two fields, selectedTime and events, if there's no event at the selected time, the events field will be either undefined or empty array\n\n        <calendar ... (onTimeSelected)=\"onTimeSelected($event)\"></calendar>\n\n        onTimeSelected = (ev: { selectedTime: Date, events: any[] }) => {\n            console.log('Selected time: ' + ev.selectedTime + ', hasEvents: ' + (ev.events !== undefined && ev.events.length !== 0));\n        };\n\n* onTitleChanged    \nThe callback function triggered when the view title is changed\n\n        <calendar ... (onTitleChanged)=\"onViewTitleChanged($event)”></calendar>\n\n        onViewTitleChanged = (title: string) => {\n            this.viewTitle = title;\n        };\n\n\n# View Customization Option\nNote: For any css class appear in the customized template, you need to specify the styles by yourself. The styles defined in the calendar component won’t be applied because of the view encapsulation.    \n\n* monthviewDisplayEventTemplate    \nType: TemplateRef\\<IMonthViewDisplayEventTemplateContext\\>    \nThe template provides customized view for event displayed in the active monthview\n\n        <template #template let-view=\"view\" let-row=\"row\" let-col=\"col\">\n            {{view.dates[row*7+col].label}}\n        </template>\n\n        <calendar ... [monthviewDisplayEventTemplate]=\"template\"></calendar>\n\n* monthviewInactiveDisplayEventTemplate    \nType: TemplateRef\\<IMonthViewDisplayEventTemplateContext\\>    \nThe template provides customized view for event displayed in the inactive monthview\n\n        <template #template let-view=\"view\" let-row=\"row\" let-col=\"col\">\n            {{view.dates[row*7+col].label}}\n        </template>\n\n        <calendar ... [monthviewInactiveDisplayEventTemplate]=\"template\"></calendar>\n\n* monthviewEventDetailTemplate    \nType: TemplateRef\\<IMonthViewEventDetailTemplateContext\\>    \nThe template provides customized view for event detail section in the monthview\n\n        <template #template let-showEventDetail=\"showEventDetail\" let-selectedDate=\"selectedDate\" let-noEventsLabel=\"noEventsLabel\">\n\t    ... \n        </template>\n\n        <calendar ... [monthviewEventDetailTemplate]=\"template\"></calendar>\n\n* weekviewAllDayEventTemplate    \nType: TemplateRef\\<IDisplayAllDayEvent\\>    \nThe template provides customized view for all day event in the weekview\n\n        <template #template let-displayEvent=\"displayEvent\">\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\n        </template>\n\n        <calendar ... [weekviewAllDayEventTemplate]=\"template\"></calendar>\n\n* weekviewNormalEventTemplate    \nType: TemplateRef\\<IDisplayEvent\\>    \nThe template provides customized view for normal event in the weekview\n\n        <template #template let-displayEvent=\"displayEvent\">\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\n        </template>\n\n        <calendar ... [weekviewNormalEventTemplate]=\"template\"></calendar>\n\n* dayviewAllDayEventTemplate    \nType: TemplateRef\\<IDisplayAllDayEvent\\>    \nThe template provides customized view for all day event in the dayview\n\n        <template #template let-displayEvent=\"displayEvent\">\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\n        </template>\n\n        <calendar ... [dayviewAllDayEventTemplate]=\"template\"></calendar>\n\n* dayviewNormalEventTemplate    \nType: TemplateRef\\<IDisplayEvent\\>    \nThe template provides customized view for normal event in the dayview\n\n        <template #template let-displayEvent=\"displayEvent\">\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\n        </template>\n\n        <calendar ... [dayviewNormalEventTemplate]=\"template\"></calendar>\n\n\n# EventSource\n\nEventSource is an array of event object which contains at least below fields:\n\n* title\n* startTime    \nIf allDay is set to true, the startTime has to be as a UTC date which time is set to 0:00 AM, because in an allDay event, only the date is considered, the exact time or timezone doesn't matter.    \nFor example, if an allDay event starting from 2014-05-09, then startTime is\n\n        var startTime = new Date(Date.UTC(2014, 4, 8));\n\n* endTime    \nIf allDay is set to true, the startTime has to be as a UTC date which time is set to 0:00 AM, because in an allDay event, only the date is considered, the exact time or timezone doesn't matter.    \nFor example, if an allDay event ending to 2014-05-10, then endTime is\n\n        var endTime = new Date(Date.UTC(2014, 4, 9));\n\n* allDay    \nIndicates the event is allDay event or regular event\n\n# Localization    \nThe DatePipe relies on LOCALE_ID to achieve localization. By default, the LOCALE_ID is **en-US**. You can override it in the module as below. If you pass **undefined**, the LOCALE_ID will be detected using the browser language setting. But using explicit value is recommended, as browser has different level of localization support.\n\n```\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\n@NgModule({\n    …\n    providers: [\n        { provide: LOCALE_ID, useValue: ‘zh-CN’ }\n    ]\n})\n```\n\n# Known issue    \nThis component updates the ion-slide dynamically so that only 3 looped slides are needed.    \nThe ion-slide in Ionic2 uses Swiper. It seems in the Swiper implementation, the next slide after the end of looped slide is a separate cached slide, instead of the first slide.    \nI can't find out a way to force refresh that cached slide, so you will notice that when sliding from the third month to the forth month, the preview month is not the forth month, but the first month.    \nOnce the sliding is over, the slide will be forced to render the forth month.\n\n# Common Questions\n* Error: Cannot find module \"intl\"  \nAnswer: This calendar has dependency on 'Intl'. Run *npm install intl@1.2.5* to install the dependency\n\n* Error: Cannot read property 'getFullYear' of undefined  \nAnswer: If you bind currentDate like this: [currentDate]=\"calendar.currentDate\". You need to assign calendar.currentDate a valid Date object\n\n* How to switch the calendar to previous/next month programmatically?  \nAnswer: You can change currentDate to the date in previous/next month.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/twinssbc/Ionic2-Calendar.git"
  },
  "scripts": {
    "build": "rm -rf dist && tsc && npm run copy_package",
    "build-prod": "rm -rf aot && node_modules/.bin/ngc -p tsconfig-aot.json && node_modules/.bin/ngc src && mv src/*ngfactory.ts aot && rm -r aot/waste",
    "copy_static_files": "cp -r package.json README.md LICENSE tsconfig.json typings.json typings dist/",
    "copy_static_files_prod": "cp -r package.json README.md LICENSE tsconfig.json typings.json typings aot/",
    "dev": "tsc --watch",
    "postinstall": "typings install"
  },
  "version": "0.2.5"
}
